services:
  db:
    container_name: project-cyan-mongo
    image: mongo:4.4.18
    restart: always
    environment:
      - TZ
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
    ports:
      - 27017:27017
    volumes:
      - dbdata:/data/db
  redis:
    container_name: project-cyan-redis
    build:
      context: ./config/redis/
      dockerfile: Dockerfile
    pull_policy: build
    restart: always
    environment:
      - TZ
    ports:
      - 6379:6379
    volumes:
      - redis:/data
  redisinsight:
    container_name: project-cyan-redisinsight
    image: redis/redisinsight:latest
    restart: always
    ports:
      - 5540:5540
    volumes:
      - redisinsight:/data

  web:
    build: &build
      context: .
      dockerfile: Dockerfile
      secrets:
        - TZ
        - RAILS_ENV
        - NODE_ENV
        - RAILS_MASTER_KEY
        - RAILS_ASSET_HOST
    container_name: project-cyan-app
    image: aldwin7894/project-cyan:prod
    restart: always
    depends_on:
      - db
      - redis
      - sidekiq
    ports:
      - 3000:3000
    environment: &env
      - DATABASE_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@db:27017/${MONGO_DB}
      - REDIS_URL=redis://redis:6379
      - TZ
      - RAILS_MASTER_KEY
      - RAILS_ENV
      - NODE_ENV
      - RAILS_ASSET_HOST
      - DISCORDRB_NONACL=true
      - RACK_TIMEOUT_SERVICE_TIMEOUT=60
      - RACK_TIMEOUT_WAIT_TIMEOUT=60
      - RUBY_GC_HEAP_GROWTH_FACTOR=1.1
      - RUBY_GC_MALLOC_LIMIT=4000100
      - RUBY_GC_MALLOC_LIMIT_GROWTH_FACTOR=1.1
      - RUBY_GC_MALLOC_LIMIT_MAX=16000100
      - RUBY_GC_OLDMALLOC_LIMIT=16000100
      - RUBY_GC_OLDMALLOC_LIMIT_MAX=16000100
      - VITE_RUBY_SKIP_ASSETS_PRECOMPILE_EXTENSION=true
  sidekiq:
    build: *build
    container_name: project-cyan-sidekiq
    image: aldwin7894/project-cyan:prod
    entrypoint: /usr/src/app/entrypoint-sidekiq.sh
    command: "bin/sidekiq"
    healthcheck:
      test: ["NONE"]
    restart: always
    depends_on:
      - db
      - redis
    environment: *env

volumes:
  dbdata:
  redis:
  redisinsight:

secrets:
  TZ:
    environment: TZ
  RAILS_ENV:
    environment: RAILS_ENV
  NODE_ENV:
    environment: NODE_ENV
  RAILS_MASTER_KEY:
    environment: RAILS_MASTER_KEY
  RAILS_ASSET_HOST:
    environment: RAILS_ASSET_HOST

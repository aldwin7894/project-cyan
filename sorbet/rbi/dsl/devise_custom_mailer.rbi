# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `DeviseCustomMailer`.
# Please instead update this file by running `bin/tapioca dsl DeviseCustomMailer`.

class DeviseCustomMailer
  class << self
    sig { params(record: T.untyped, token: T.untyped, opts: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def confirmation_instructions(record, token, opts = T.unsafe(nil)); end

    sig { params(resource_or_scope: T.untyped, args: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def destroy_session_path(resource_or_scope, *args); end

    sig { params(resource_or_scope: T.untyped, args: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def destroy_session_url(resource_or_scope, *args); end

    sig { params(resource_or_scope: T.untyped, args: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def edit_password_path(resource_or_scope, *args); end

    sig { params(resource_or_scope: T.untyped, args: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def edit_password_url(resource_or_scope, *args); end

    sig { params(record: T.untyped, opts: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def email_changed(record, opts = T.unsafe(nil)); end

    sig { params(resource_or_scope: T.untyped, args: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def new_password_path(resource_or_scope, *args); end

    sig { params(resource_or_scope: T.untyped, args: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def new_password_url(resource_or_scope, *args); end

    sig { params(resource_or_scope: T.untyped, args: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def new_session_path(resource_or_scope, *args); end

    sig { params(resource_or_scope: T.untyped, args: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def new_session_url(resource_or_scope, *args); end

    sig { params(record: T.untyped, opts: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def password_change(record, opts = T.unsafe(nil)); end

    sig { params(resource_or_scope: T.untyped, args: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def password_path(resource_or_scope, *args); end

    sig { params(resource_or_scope: T.untyped, args: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def password_url(resource_or_scope, *args); end

    sig { params(record: T.untyped, token: T.untyped, opts: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def reset_password_instructions(record, token, opts = T.unsafe(nil)); end

    sig { params(resource_or_scope: T.untyped, args: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def session_path(resource_or_scope, *args); end

    sig { params(resource_or_scope: T.untyped, args: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def session_url(resource_or_scope, *args); end

    sig { params(record: T.untyped, token: T.untyped, opts: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def unlock_instructions(record, token, opts = T.unsafe(nil)); end
  end
end

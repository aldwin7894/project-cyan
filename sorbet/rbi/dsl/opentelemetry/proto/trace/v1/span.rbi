# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Opentelemetry::Proto::Trace::V1::Span`.
# Please instead update this file by running `bin/tapioca dsl Opentelemetry::Proto::Trace::V1::Span`.

class Opentelemetry::Proto::Trace::V1::Span
  sig do
    params(
      attributes: T.nilable(T.any(Google::Protobuf::RepeatedField[Opentelemetry::Proto::Common::V1::KeyValue], T::Array[Opentelemetry::Proto::Common::V1::KeyValue])),
      dropped_attributes_count: T.nilable(Integer),
      dropped_events_count: T.nilable(Integer),
      dropped_links_count: T.nilable(Integer),
      end_time_unix_nano: T.untyped,
      events: T.nilable(T.any(Google::Protobuf::RepeatedField[Opentelemetry::Proto::Trace::V1::Span::Event], T::Array[Opentelemetry::Proto::Trace::V1::Span::Event])),
      kind: T.nilable(T.any(Symbol, Integer)),
      links: T.nilable(T.any(Google::Protobuf::RepeatedField[Opentelemetry::Proto::Trace::V1::Span::Link], T::Array[Opentelemetry::Proto::Trace::V1::Span::Link])),
      name: T.nilable(String),
      parent_span_id: T.nilable(String),
      span_id: T.nilable(String),
      start_time_unix_nano: T.untyped,
      status: T.nilable(Opentelemetry::Proto::Trace::V1::Status),
      trace_id: T.nilable(String),
      trace_state: T.nilable(String)
    ).void
  end
  def initialize(attributes: T.unsafe(nil), dropped_attributes_count: nil, dropped_events_count: nil, dropped_links_count: nil, end_time_unix_nano: nil, events: T.unsafe(nil), kind: nil, links: T.unsafe(nil), name: nil, parent_span_id: nil, span_id: nil, start_time_unix_nano: nil, status: nil, trace_id: nil, trace_state: nil); end

  sig { returns(Google::Protobuf::RepeatedField[Opentelemetry::Proto::Common::V1::KeyValue]) }
  def attributes; end

  sig { params(value: Google::Protobuf::RepeatedField[Opentelemetry::Proto::Common::V1::KeyValue]).void }
  def attributes=(value); end

  sig { void }
  def clear_attributes; end

  sig { void }
  def clear_dropped_attributes_count; end

  sig { void }
  def clear_dropped_events_count; end

  sig { void }
  def clear_dropped_links_count; end

  sig { void }
  def clear_end_time_unix_nano; end

  sig { void }
  def clear_events; end

  sig { void }
  def clear_kind; end

  sig { void }
  def clear_links; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_parent_span_id; end

  sig { void }
  def clear_span_id; end

  sig { void }
  def clear_start_time_unix_nano; end

  sig { void }
  def clear_status; end

  sig { void }
  def clear_trace_id; end

  sig { void }
  def clear_trace_state; end

  sig { returns(Integer) }
  def dropped_attributes_count; end

  sig { params(value: Integer).void }
  def dropped_attributes_count=(value); end

  sig { returns(Integer) }
  def dropped_events_count; end

  sig { params(value: Integer).void }
  def dropped_events_count=(value); end

  sig { returns(Integer) }
  def dropped_links_count; end

  sig { params(value: Integer).void }
  def dropped_links_count=(value); end

  sig { returns(T.untyped) }
  def end_time_unix_nano; end

  sig { params(value: T.untyped).void }
  def end_time_unix_nano=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Opentelemetry::Proto::Trace::V1::Span::Event]) }
  def events; end

  sig { params(value: Google::Protobuf::RepeatedField[Opentelemetry::Proto::Trace::V1::Span::Event]).void }
  def events=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def kind; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def kind=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Opentelemetry::Proto::Trace::V1::Span::Link]) }
  def links; end

  sig { params(value: Google::Protobuf::RepeatedField[Opentelemetry::Proto::Trace::V1::Span::Link]).void }
  def links=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(String) }
  def parent_span_id; end

  sig { params(value: String).void }
  def parent_span_id=(value); end

  sig { returns(String) }
  def span_id; end

  sig { params(value: String).void }
  def span_id=(value); end

  sig { returns(T.untyped) }
  def start_time_unix_nano; end

  sig { params(value: T.untyped).void }
  def start_time_unix_nano=(value); end

  sig { returns(T.nilable(Opentelemetry::Proto::Trace::V1::Status)) }
  def status; end

  sig { params(value: T.nilable(Opentelemetry::Proto::Trace::V1::Status)).void }
  def status=(value); end

  sig { returns(String) }
  def trace_id; end

  sig { params(value: String).void }
  def trace_id=(value); end

  sig { returns(String) }
  def trace_state; end

  sig { params(value: String).void }
  def trace_state=(value); end
end
